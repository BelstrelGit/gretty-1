/*
 * Copyright 2009-2011 MBTE Sweden AB.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'idea'

def _version = '0.4.265'

subprojects {
    apply plugin: 'groovy'
    apply plugin: 'idea'
    apply plugin: 'maven'

    group = 'org.mbte.groovypp'
    version = _version
    gppVersion = '0.4.261_1.8.0'

    repositories {
      mavenCentral ()

      mavenRepo urls: new File("${System.getProperty('user.home')}/.m2/repository").toURL().toString()
      mavenRepo urls: 'http://groovypp.artifactoryonline.com/groovypp/libs-releases-local/'

      mavenRepo urls: 'http://repository.jboss.org/nexus/content/groups/public/'
    }

    sourceSets {
        main {
            groovy {
                srcDir 'src'
            }
            resources {
                srcDirs 'src'
            }
        }

        test {
          groovy {
            srcDir 'tests'
          }
        }
    }

    task sourcesJar(type: Jar, dependsOn:classes) {
         classifier = 'sources'
         from sourceSets.main.allSource
    }

    artifacts {
        archives sourcesJar
    }

    uploadArchives {
        repositories.mavenDeployer {
            def repo = "http://groovypp.artifactoryonline.com/groovypp/libs-releases-local/"
            if(System.getProperty("repo") == 'local')
                repo = 'file://' + new File(System.getProperty('user.home'), ".m2${File.separatorChar}repository").absolutePath
            repository(url: repo) {
                authentication(userName: ARTIFACTORY_USER, password: ARTIFACTORY_PASSWORD)
            }
        }
    }
}


task deployGoogle(dependsOn:[':gretty:sourcesJar', ':gretty:jar', ':gretty-hazelcast:jar', ':gretty-hazelcast:sourcesJar']) << {
  ant.taskdef(name:"gcupload", classname:"net.bluecow.googlecode.ant.GoogleCodeUploadTask", classpath:"lib/ant-googlecode-0.0.2.jar")

  ant.gcupload(username:GOOGLE_USER, password:GOOGLE_PASSWORD, projectname:"groovypptest", filename:file("gretty/build/libs/gretty-${_version}.jar").absolutePath, targetfilename:"gretty-${_version}.jar", summary:"Gretty $_version", labels:"Featured", verbose:"true")

  ant.gcupload(username:GOOGLE_USER, password:GOOGLE_PASSWORD, projectname:"groovypptest", filename:file("gretty/build/libs/gretty-${_version}-sources.jar").absolutePath, targetfilename:"gretty-${_version}-sources.jar", summary:"Gretty $_version sources", labels:"Featured", verbose:"true")

  ant.gcupload(username:GOOGLE_USER, password:GOOGLE_PASSWORD, projectname:"groovypptest", filename:file("gretty-hazelcast/build/libs/gretty-hazelcast-${_version}.jar").absolutePath, targetfilename:"gretty-hazelcast-${_version}.jar", summary:"Gretty Hazelcast module $_version", labels:"Featured", verbose:"true")

  ant.gcupload(username:GOOGLE_USER, password:GOOGLE_PASSWORD, projectname:"groovypptest", filename:file("gretty-hazelcast/build/libs/gretty-hazelcast-${_version}-sources.jar").absolutePath, targetfilename:"gretty-hazelcast-${_version}-sources.jar", summary:"Gretty Haselcast module $_version sources", labels:"Featured", verbose:"true")
}

task wrapper(type: Wrapper) {
    gradleVersion = '0.9-rc-3'
}