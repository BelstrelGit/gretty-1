/*
 * Copyright 2009-2010 MBTE Sweden AB.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

apply plugin: 'idea'

def _version = '0.4.279'
def _gppVersion = '0.4.279_1.8.0'

Set groovyProjects = ['gretty', 'gretty-hazelcast']

subprojects { prj ->
    def groovyProject = groovyProjects.contains(prj.name)
    def scalaProject  = prj.name.contains('-scala')

    apply plugin: groovyProject ? 'groovy' : ( scalaProject ? 'scala' : 'java')
    apply plugin: 'idea'
    apply plugin: 'maven'

    group = 'org.mbte.groovypp'
    version = _version
    gppVersion = _gppVersion

    repositories {
      mavenCentral ()

      mavenRepo urls: new File("${System.getProperty('user.home')}/.m2/repository").toURL().toString()
      mavenRepo urls: 'http://groovypp.artifactoryonline.com/groovypp/libs-releases-local/'

      mavenRepo urls: 'http://repository.jboss.org/nexus/content/groups/public/'
    }

    dependencies {
        if(groovyProject) {
            groovy  group: 'org.mbte.groovypp', name: 'groovypp', version: "$gppVersion"
            compile group: 'org.mbte.groovypp', name: 'groovypp', version: "$gppVersion"
            }

        if(scalaProject) {
            // Libraries needed to run the scala tools
            scalaTools 'org.scala-lang:scala-compiler:2.8.1'
            scalaTools 'org.scala-lang:scala-library:2.8.1'

            // Libraries needed for scala api
            compile 'org.scala-lang:scala-library:2.8.1'
            }

        testCompile(group: 'junit', name: 'junit', version: '4.8.1')
        }

    sourceSets {
        main {
            if(groovyProject)
                groovy { srcDir 'src' }
            else
                if(scalaProject)
                    scala { srcDir 'src' }
                else
                    java { srcDir 'src' }
            resources { srcDirs 'src' }
        }

        test {
            if(groovyProject)
                groovy { srcDir 'tests' }
            else
                if(scalaProject)
                    scala { srcDir 'tests' }
                else
                    java { srcDir 'tests' }
          }
        }

    task sourcesJar(type: Jar, dependsOn:classes) {
         classifier = 'sources'
         from sourceSets.main.allSource
    }

    artifacts {
        archives sourcesJar
    }

    if (project.hasProperty('ARTIFACTORY_USER') && project.hasProperty('ARTIFACTORY_PASSWORD')) {
        uploadArchives {
            repositories.mavenDeployer {
                def repo = "http://groovypp.artifactoryonline.com/groovypp/libs-releases-local/"
                if(System.getProperty("repo") == 'local')
                    repo = 'file://' + new File(System.getProperty('user.home'), ".m2${File.separatorChar}repository").absolutePath
                repository(url: repo) {
                    authentication(userName: ARTIFACTORY_USER, password: ARTIFACTORY_PASSWORD)
                }
            }
        }
    }
}


if (project.hasProperty('ARTIFACTORY_USER') && project.hasProperty('ARTIFACTORY_PASSWORD')) {
    task deployGoogle(dependsOn:[':gretty:sourcesJar', ':gretty:jar', ':gretty-hazelcast:jar', ':gretty-hazelcast:sourcesJar']) << {
      ant.taskdef(name:"gcupload", classname:"net.bluecow.googlecode.ant.GoogleCodeUploadTask", classpath:"lib/ant-googlecode-0.0.2.jar")

      ant.gcupload(username:GOOGLE_USER, password:GOOGLE_PASSWORD, projectname:"groovypptest", filename:file("gretty-api/build/libs/gretty-api-${_version}.jar").absolutePath, targetfilename:"gretty-hazelcast-${_version}.jar", summary:"Gretty API module $_version (Use with Groovy++ $_gppVersion)", labels:"Featured", verbose:"true")

      ant.gcupload(username:GOOGLE_USER, password:GOOGLE_PASSWORD, projectname:"groovypptest", filename:file("gretty-api/build/libs/gretty-api-${_version}-sources.jar").absolutePath, targetfilename:"gretty-hazelcast-${_version}-sources.jar", summary:"Gretty API module $_version sources", labels:"Featured", verbose:"true")

      ant.gcupload(username:GOOGLE_USER, password:GOOGLE_PASSWORD, projectname:"groovypptest", filename:file("gretty/build/libs/gretty-${_version}.jar").absolutePath, targetfilename:"gretty-${_version}.jar", summary:"Gretty $_version (Use with Groovy++ $_gppVersion)", labels:"Featured", verbose:"true")

      ant.gcupload(username:GOOGLE_USER, password:GOOGLE_PASSWORD, projectname:"groovypptest", filename:file("gretty/build/libs/gretty-${_version}-sources.jar").absolutePath, targetfilename:"gretty-${_version}-sources.jar", summary:"Gretty $_version sources", labels:"Featured", verbose:"true")

      ant.gcupload(username:GOOGLE_USER, password:GOOGLE_PASSWORD, projectname:"groovypptest", filename:file("gretty-hazelcast/build/libs/gretty-hazelcast-${_version}.jar").absolutePath, targetfilename:"gretty-hazelcast-${_version}.jar", summary:"Gretty Hazelcast module $_version (Use with Groovy++ $_gppVersion)", labels:"Featured", verbose:"true")

      ant.gcupload(username:GOOGLE_USER, password:GOOGLE_PASSWORD, projectname:"groovypptest", filename:file("gretty-hazelcast/build/libs/gretty-hazelcast-${_version}-sources.jar").absolutePath, targetfilename:"gretty-hazelcast-${_version}-sources.jar", summary:"Gretty Haselcast module $_version sources", labels:"Featured", verbose:"true")
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '0.9-rc-3'
}